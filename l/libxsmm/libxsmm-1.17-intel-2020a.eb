easyblock = 'ConfigureMake'

name =    'libxsmm'
version = '1.17'

local_buildset = '2020a'

homepage = 'https://github.com/hfp/libxsmm'

whatis = [
    "Description: libxsmm - a library for small dense and small sparse matrix-matrix multiplications targeting Intel Architecture (x86)."
]

description = """
LIBXSMM is a library for specialized dense and sparse matrix operations as well
as for deep learning primitives such as small convolutions. The library is 
targeting Intel Architecture with Intel SSE, Intel AVX, Intel AVX2, Intel 
AVX‑512 (with VNNI and Bfloat16). Code generation is mainly based on 
Just‑In‑Time (JIT) code specialization for compiler-independent performance 
(matrix multiplications, matrix transpose/copy, sparse functionality, and deep 
learning). LIBXSMM is suitable for "build once and deploy everywhere", i.e., 
no special target flags are needed to exploit the available performance. 
Supported GEMM datatypes are: FP64, FP32, bfloat16, int16, and int8.
"""

toolchain = {'name': 'intel', 'version': local_buildset}

sources =     ['%(version)s.tar.gz']
source_urls = ['https://github.com/hfp/libxsmm/archive/']

# install both static and dynamic version
installopts = ['PREFIX=%(installdir)s', 'PREFIX=%(installdir)s STATIC=0']

skipsteps = ['configure']
maxparallel = 1

sanity_check_paths = {
    'files': ['bin/libxsmm_gemm_generator', 'include/libxsmm.h', 'lib/libxsmm.a', 'lib/libxsmm.%s' % SHLIB_EXT],
    'dirs':  ['share']
}

moduleclass = 'math'

easyblock = 'ConfigureMake'

local_buildset =             '2019b'
local_gcc_version =          '8.3.0'
local_binutils_version =     '2.32'

local_zlib_version =         '1.2.11'        # https://zlib.net/
local_libevent_version =     '2.1.11'        # https://libevent.org/

name =          'libevent'
version =       local_libevent_version
versionsuffix = '-baselibsDevel'

homepage = 'https://libevent.org/'

whatis = [
    "Description: libevent is an event notification library",
]

description = """
The libevent API provides a mechanism to execute a callback function when
a specific event occurs on a file descriptor or after a timeout has been
reached.  Furthermore, libevent also support callbacks due to signals or
regular timeouts.
"""

toolchain = {'name': 'GCCcore', 'version': local_gcc_version}
toolchainopts = {'pic': True}

source_urls = ['https://github.com/%(name)s/%(name)s/releases/download/release-%(version)s-stable/']
sources =     ['%(name)s-%(version)s-stable.tar.gz']
checksums =   ['a65bac6202ea8c5609fd5c7e480e6d25de467ea1917c08290c521752f147283d']

builddependencies = [
    ('binutils',   local_binutils_version),
    ('buildtools', local_buildset,         '', True),
]

dependencies = [
    ('zlib', local_zlib_version, versionsuffix),
]

osdependencies = [
    ('openssl-devel', 'libssl-dev', 'libopenssl-devel'),
]

sanity_check_paths = {
    'files': ['bin/event_rpcgen.py', 'include/event.h', 'include/event2/event.h'] +
             ['lib/libevent%s.%s' % (x,y) for x in ['', '_core', '_extra', '_openssl', '_pthreads'] for y in ['a', 'la', SHLIB_EXT]] +
             ['lib/pkgconfig/libevent%s.pc' % x for x in ['', '_core', '_extra', '_openssl', '_pthreads']],
    'dirs':  [],
}

sanity_check_commands = [ 'pkg-config --libs libevent%s' % x for x in ['', '_core', '_extra', '_openssl', '_pthreads']]

moduleclass = 'lib'

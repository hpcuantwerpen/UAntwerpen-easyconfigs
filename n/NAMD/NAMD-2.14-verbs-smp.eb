easyblock = 'Tarball'

name =          'NAMD'
version =       '2.14'
versionsuffix = '-verbs-smp'

homepage = 'http://www.ks.uiuc.edu/Research/namd/'
whatis = [
    'Description: NAMD is a scalable parallel molecular dynamics code designed for high-performance simulation of large biomolecular systems.',
    'This module contains the verbs-smp binary as distributed by the developers of the software (verbs-smp = hybrid executable with multi-copy algorithms on InfiniBand and multithreading).'
]


description = """
NAMD, recipient of a 2002 Gordon Bell Award and a 2012 Sidney Fernbach Award,
is a parallel molecular dynamics code designed for high-performance simulation
of large biomolecular systems. Based on Charm++ parallel objects, NAMD scales
to hundreds of cores for typical simulations and beyond 500,000 cores for the
largest simulations. NAMD uses the popular molecular graphics program VMD for
simulation setup and trajectory analysis, but is also file-compatible with
AMBER, CHARMM, and X-PLOR. 

This module contains the verbs-smp binary as distributed by the developers.
This is a hybrid shared/distributed memory executable using multi-copy
algorithms on InfiniBand and multithreading for shared memory parallelism.
This version may use slightly less memory than the verbs version, but may also
be slightly slower since some cores are lost on the communication threads.

NAMD is free for non-commercial use but the the developers request that you
electronically sign a license when you donwload the software. We have 
agreed with the developer that we can centrally install the software on the
condition that every user signs that agreement, basically because it is 
important for their funding. So you only get access to the software once
you show that you have signed that license (contact UAntwerp hpc support).
"""

examples = """
For Leibniz with Torque/PBS:

One way to run the apoa1 benchmark (after downloading the necessary files)
on 2 nodes with 28 cores each, and keeping in mind that the NAMD manual
advises to use 1 core on each node for the communication thread:
* Node request: Use -L tasks=2:lprocs=28:swap=....
* Load this NAMD module
* To run, first prepare a suitable nodelist and then start the executable
  using 27 (=28-1) worker threads per process and a total of 54(=2*27)
  worker threads:
      for node in `sort -u $PBS_NODEFILE`; do echo host $node >>nodelist.$PBS_JOBID; done
      charmrun +p54 ++ppn 27 ++nodelist nodelist.$PBS_JOBID $EBROOTNAMD/namd2 apoa1.namd
"""

docurls = [
    'NAMD %(version)s User Guide: http://www.ks.uiuc.edu/Research/namd/%(version)s/ug/',
    'NAMD Wiki: http://www.ks.uiuc.edu/Research/namd/wiki/',
    'NAMD license: $EBROOTNAMD/license.txt'
]

upstream_contacts = [
    'NAMD Mailing List/forum: http://www.ks.uiuc.edu/Research/namd/mailing_list/',
    'NAMD bug report instructions: http://www.ks.uiuc.edu/Research/namd/bugreport.html',
]

docpaths = [ 'notes.txt' ]

toolchain = SYSTEM

# NAMD registration required.
# Download the sources from the NAMD web site and put in /apps/antwerpen/sources
sources = ['%(name)s_%(version)s_Linux-x86_64%(versionsuffix)s.tar.gz']

sanity_check_paths = {
    'files': ['namd2'],
    'dirs':  ['lib'],
}

modextrapaths = { 'PATH': '.' }

moduleclass = 'chem'

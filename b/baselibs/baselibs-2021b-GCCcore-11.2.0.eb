easyblock = 'Bundle'
easybuild_version = '4.5.3'

name =          'baselibs'
version =       '2020a'
#versionsuffix = '-dev'

homepage = '(none)'

# We list all libraries in a whatis line so that they can be found by module keyword.
# Contrary to what the LMOD documentation makes you believe, it seems that help is
# not searched when using module keyword.
whatis = [
    "Description: A number of usefull libraries, installed together as a bundle",
    "Contains: ncurses/ncursesw, readline, brotli, " +
    "bzip2, Szip, XZ utils, zlib, gzip, lzip, lz4, zstd, libb2, LZO(2), snappy, libdeflate, libarchive, " +
    "giflib, JasPer, libjpeg-turbo, libpng, LibTIFF, libwebp, " +
    "LAME, libopus, libogg (Ogg), libvorbis (OggVorbis), FLAC, libsndfile, x264, x265, libtheora, " +
    "cURL, expat, libxml2, libxslt, libidn, libidn2, " +
    "GSL, libcerf, GMP, MPFR, MPC, pixman, freetype, fontconfig, " +
    "FriBidi, gettext, ICU, libiconv, libunistring, " +
    "double-conversion, file, gc, libevent, libffi, libyaml, libtool, " +
    "LMDB, PCRE, PCRE2, UDUNITS, D-Bus, util-linux, wget.",
]

local_binutils_version = '2.37'     # A build dependency, as GCCcore with the system binutils might fail.
local_gcc_version      = '11.2.0'

local_libtool_version =          '2.4.6'         # libtool    20150215 - https://ftp.gnu.org/gnu/libtool/

local_blosc_version =            '1.21.1'        # https://github.com/Blosc/c-blosc/releases
local_brotli_version =           '1.0.9'         # https://github.com/google/brotli/releases
local_bzip2_version =            '1.0.8'         # http://www.bzip.org/downloads.html
local_cURL_version =             '7.78.0'        # https://curl.haxx.se/download/
local_double_conv_version =      '3.1.5'         # https://github.com/google/double-conversion/releases
local_expat_version =            '2.4.1'         # https://github.com/libexpat/libexpat/releases
local_file_version =             '5.41'          # ftp://ftp.astron.com/pub/file/
local_FLAC_version =             '1.3.3'         # https://xiph.org/downloads/ or https://github.com/xiph/flac/releases
local_fontconfig_version =       '2.13.94'       # https://www.freedesktop.org/software/fontconfig/release/
local_freetype_version =         '2.11.0'        # https://download.savannah.gnu.org/releases/freetype/
local_fribidi_version =          '1.0.10'        # https://github.com/fribidi/fribidi/releases
local_gc_version =               '8.2.0'         # http://hboehm.info/gc/gc_source/
local_GDBM_version =             '1.23'          # https://ftp.gnu.org/gnu/gdbm/
local_gettext_version =          '0.21'          # https://ftp.gnu.org/pub/gnu/gettext/
local_giflib_version =           '5.2.1'         # https://sourceforge.net/projects/giflib/files/
local_GMP_version =              '6.2.1'         # https://ftp.gnu.org/gnu/gmp/
local_GSL_version =              '2.7'           # https://ftp.gnu.org/gnu/gsl/
local_gzip_version =             '1.10'          # https://ftp.gnu.org/gnu/gzip/
local_ICU_version =              '69.1'          # http://site.icu-project.org/home
local_JasPer_version =           '2.0.33'        # http://www.ece.uvic.ca/~frodo/jasper/#download
local_LAME_version =             '3.100'         # http://lame.sourceforge.net/
local_libarchive_version =       '3.5.1'         # https://github.com/libarchive/libarchive/releases
local_libb2_version =            '0.98.1'        # https://github.com/BLAKE2/libb2/releases
local_libcerf_version =          '1.17'          # https://jugit.fz-juelich.de/mlz/libcerf/-/releases
local_libdeflate_version =       '1.8'           # https://github.com/ebiggers/libdeflate/releases
local_libevent_version =         '2.1.12'        # https://libevent.org/
local_libffi_version =           '3.4.2'         # ftp://sourceware.org/pub/libffi/
local_libiconv_version =         '1.16'          # https://ftp.gnu.org/pub/gnu/libiconv/
local_libidn_version =           '1.38'          # https://ftp.gnu.org/gnu/libidn/
local_libidn2_version =          '2.3.2'         # https://ftp.gnu.org/gnu/libidn/
local_libjpegturbo_version =     '2.0.6'         # https://sourceforge.net/projects/libjpeg-turbo/files/
local_libogg_version =           '1.3.5'         # https://www.xiph.org/downloads/ or https://github.com/xiph/ogg/releases
local_libopus_version =          '1.3.1'         # http://opus-codec.org/downloads/
local_libpng_version =           '1.6.37'        # http://www.libpng.org/pub/png/libpng.html
local_libreadline_version =      '8.1'           # https://ftp.gnu.org/pub/gnu/readline/
local_libsndfile_version =       '1.0.31'        # https://github.com/erikd/libsndfile/releases
local_libtheora_version =        '1.1.1'         # https://www.theora.org/downloads/ or https://github.com/xiph/theora/releases
local_libtiff_version =          '4.3.0'         # http://www.simplesystems.org/libtiff/
local_libunistring_version =     '1.0'           # https://ftp.gnu.org/gnu/libunistring/
local_libvorbis_version =        '1.3.7'         # https://xiph.org/downloads/ or https://github.com/xiph/vorbis/releases
local_libwebp_version =          '1.2.0'         # https://github.com/webmproject/libwebp/releases
local_libxml2_version =          '2.9.10'        # http://xmlsoft.org/sources/
local_libxslt_version =          '1.1.34'        # http://xmlsoft.org/sources/
local_libyaml_version =          '0.2.5'         # https://github.com/yaml/libyaml/releases
local_LMDB_version =             '0.9.29'        # https://github.com/LMDB/lmdb/releases
local_lz4_version =              '1.9.3'         # https://github.com/lz4/lz4/releases
local_lzip_version =             '1.23'          # http://download.savannah.gnu.org/releases/lzip/
local_LZO_version =              '2.10'          # http://www.oberhumer.com/opensource/lzo/#download
local_MPC_version =              '1.2.1'         # https://ftp.gnu.org/gnu/mpc/
local_mpdecimal_version =        '2.5.1'         # https://www.bytereef.org/mpdecimal/
local_MPFR_version =             '4.1.0'         # https://ftp.gnu.org/gnu/mpfr/
local_ncurses_version =          '6.2'           # https://ftp.gnu.org/pub/gnu/ncurses/
local_PCRE_version =             '8.45'          # https://ftp.pcre.org/pub/pcre/
local_PCRE2_version =            '10.37'         # https://ftp.pcre.org/pub/pcre/
local_pixman_version =           '0.40.0'        # https://www.cairographics.org/releases/
local_snappy_version =           '1.1.9'         # https://github.com/google/snappy/releases
local_Szip_version =             '2.1.1'         # https://support.hdfgroup.org/ftp/lib-external/szip/
local_UDUNITS_version =          '2.2.28'        # ftp://ftp.unidata.ucar.edu/pub/udunits
local_util_version =             '2.37'          # https://mirrors.edge.kernel.org/pub/linux/utils/util-linux/
local_wget_version =             '1.21.2'        # https://ftp.gnu.org/gnu/wget/
local_x264_version =             '20210613'      # https://download.videolan.org/pub/videolan/x264/snapshots/
local_x264_commit =              '5db6aa6c'      # Via EasyBuild
local_x265_version =             '3.5'           # http://download.videolan.org/pub/videolan/x265/
local_XZ_version =               '5.2.5'         # https://tukaani.org/xz/
local_zlib_version =             '1.2.11'        # https://zlib.net/
local_zstd_version =             '1.5.0'         # https://github.com/facebook/zstd/releases

description = """
This module provides a large number of up-to-date base libraries used by many
packages and as such effectively an update to the often very conservative
Linux enterprise-oriented distributions.

Overview of included libraries:

* Terminal I/O
  + ncurses (version %(ncurses)s): The Ncurses (new curses) library is a free software
    emulation of curses in System V Release 4.0, and more. It uses Terminfo
    format, supports pads and color and multiple highlights and forms characters
    and function-key mapping, and has all the other SYSV-curses enhancements
    over BSD Curses.
    Documentation is available through man pages in sections 3, 5 and 7.
  + libreadline (version %(libreadline)s): The GNU Readline library provides a set of
    functions for use by applications that allow users to edit command lines as
    they are typed in. Both Emacs and vi editing modes are available.
    The Readline library includes additional functions to maintain a list of
    previously-entered command lines, to recall and perhaps reedit those lines,
    and perform csh-like history expansion on previous commands.
    There are manual pages for readline and history and help via info.
* File compression tools and libraries
  + brolti (version %(brotli)s): Brotli is a generic-purpose lossless compression
    algorithm that compresses data using a combination of a modern variant of
    the LZ77 algorithm, Huffman coding currently available general-purpose
    compression methods. It is similar in speed with deflate but offers more
    dense compression.
    The specification of the Brotli Compressed Data Format is defined in RFC 7932.
  + bzip2 (version %(bzip2)s): Patent-free high-quailty data compressor
    with very good compression yet fast compression and decompression
    (.bz2 files)
  + LZ4 (version %(lz4)s): lossless compression algorithm, providing compression
    speed > 500 MB/s per core, scalable with multi-cores CPU. It features
    an extremely fast decoder, with speed in multiple GB/s per core,
    typically reaching RAM speed limits on multi-core systems.
  + Szip (version %(Szip)s): library maintained by the HDF group for lossless
    compression of scientific data.
  + XZ Utils (version %(XZ)s): XZ data compression libraries and
    utilities and the successor to LZMA Utils. It contains the liblzma library
    with API similar to that of zlib and some command line tools and shell
    scripts with similar function as those that come with gzip (xz, xzdec,
    xzgrep, xzdiff, ...)
  + zlib (version %(zlib)s): Free lossless data compression library, not
    covered by any patents, for the popular .gz files.
    The zlib package is included in this module as a dependency.
  + gzip (version %(gzip)s): gzip data compression programs.
  + lzip (version %(lzip)s): Lzip is a lossless data compressor with a user interface
    similar to the one of gzip or bzip2. Lzip can compress about as fast as gzip
    (lzip -0) or compress most files more than bzip2 (lzip -9). Decompression
    speed is intermediate between gzip and bzip2. Lzip is better than gzip
    and bzip2 from a data recovery perspective. Lzip has been designed,
    written, and tested with great care to replace gzip and bzip2 as the
    standard general-purpose compressed format for unix-like systems.
  + zstd (version %(zstd)s: Facebook Zstandard compression, a real-time
    compression algorithm, providing high compression ratios. It offers a
    very wide range of compression/speed trade-off, while being backed by a
    very fast decoder. It also offers a special mode for small data, called
    dictionary compression, and can create dictionaries from any sample set.
  + libb2 (version %(libb2)s): a C library providing BLAKE2b, BLAKE2s, BLAKE2bp, BLAKE2sp
  + LZO (version %(LZO)s): a portable lossless data compression library written in ANSI C.
    It offers pretty fast compression and *extremely* fast decompression.
    It also includes slower compression levels achieving a quite competitive
    compression ratio while still decompressing at this very high speed.
    It is faster than zlip or BZIP2, but doesn't compress as well as those
    packages do.
  + snappy (version %(snappy)s): a compression/decompression library. It does not aim
    for maximum compression, or compatibility with any other compression library;
    instead, it aims for very high speeds and reasonable compression.
  + Blosc (version %(blosc)s): a high performance compressor optimized for binary data. It has been
    designed to transmit data to the processor cache faster than the traditional,
    non-compressed, direct memory fetch approach via a memcpy() OS call. Blosc is
    the first compressor (that I'm aware of) that is meant not only to reduce the
    size of large datasets on-disk or in-memory, but also to accelerate
    memory-bound computations (which is typical in vector-vector operations).
    It uses the blocking technique (as described in this article) to reduce activity
    on the memory bus as much as possible. In short, the blocking technique works
    by dividing datasets in blocks that are small enough to fit in L1 cache of
    modern processor and perform compression/decompression there. It also
    leverages SIMD (SSE2) and multi-threading capabilities present in nowadays
    multi-core processors so as to accelerate the compression/decompression
    process to a maximum.
  + libdeflate (version %(libdeflate)s): libdeflate is a library for fast, whole-buffer DEFLATE-based
    compression and decompression. Libdeflate is heavily optimized. It is
    significantly faster than the zlib library, both for compression and
    decompression, and especially on x86 processors. In addition, libdeflate
    provides optional high compression modes that provide a better compression
    ratio than the zlib's "level 9".
  + libarchive (version %(libarchive)s): Multi-format archive and compression library.
* Graphics file formats
  + giflib (version %(giflib)s): a library for reading and writing gif images. It is
    API and ABI compatible with libungif which was in wide use while the LZW
    compression algorithm was patented.
  + JasPer (version %(JasPer)s): an open-source initiative to provide a free
    software-based reference implementation of the codec specified in the
    JPEG-2000 Part-1 standard (i.e., ISO/IEC 15444-1). The JasPer software is
    written in the C programming language. The software has been included in
    the JPEG-2000 Part-5 standard (i.e., ISO/IEC 15444-5), as an official
    reference implementation of the JPEG-2000 Part-1 codec. This software has
    also been incorporated into numerous other software projects (some
    commercial and some non-commercial).
    There is a web-based reference manual and man pages and a --help option
    for the commands imgcmp, imginfo and jasper.
  + libjpeg-turbo (version %(libjpegturbo)s): libjpeg-turbo is a JPEG image codec that
    uses SIMD instructions (MMX, SSE2, NEON, AltiVec) to accelerate baseline
    JPEG compression and decompression on x86, x86-64, ARM, and PowerPC systems.
    On such systems, libjpeg-turbo is generally 2-6x as fast as libjpeg, all
    else being equal. On other types of systems, libjpeg-turbo can still
    outperform libjpeg by a significant amount, by virtue of its
    highly-optimized Huffman coding routines. In many cases, the performance of
    libjpeg-turbo rivals that of proprietary high-speed JPEG codecs.
    libjpeg-turbo implements both the traditional libjpeg API as well as the
    less powerful but more straightforward TurboJPEG API. libjpeg-turbo also
    features colorspace extensions that allow it to compress from/decompress to
    32-bit and big-endian pixel buffers (RGBX, XBGR, etc.).
    It also includes a number of command line tools: cjpeg, djpeg, jpegtran,
    rdjpgcom and wrjpgcom, all supporting --help.
  + libpng (version %(libpng)s): libpng is the official PNG reference library. It
    supports almost all PNG features, is extensible, and has been extensivelys
    tested. The home site for development versions (i.e., may be buggy or
    subject to change or include experimental features) is
    https://libpng.sourceforge.io/, and the place to go for questions about the
    library is the png-mng-implement mailing list.
    libpng is available as ANSI C (C89) source code
    The libpng 1.5.x, 1.6.x, and upcoming 1.7.x series continue the evolution of
    the libpng API, finally hiding the contents of the venerable and hoary
    png_struct and png_info data structures inside private (i.e., non-installed)
    header files. Instead of direct struct-access, applications should be using
    the various png_get_xxx() and png_set_xxx() accessor functions, which have
    existed for almost as long as libpng itself.
  + LibTIFF (version %(libtiff)s): This software provides support for the Tag Image
    File Format (TIFF), a widely used format for storing image data. The latest
    version of the TIFF specification is available on-line in several different formats.
    Included in this software distribution is a library, libtiff, for reading and
    writing TIFF, a small collection of tools for doing simple manipulations of TIFF
    images, and documentation on the library and tools. Libtiff is a portable software,
    it was built and tested on various systems: UNIX flavors (Linux, BSD, Solaris,
    MacOS X), Windows, and OpenVMS. It should be possible to port libtiff and
    additional tools on other OSes.
    The library, along with associated tool programs, should handle most of your
    needs for reading and writing TIFF images.
  + libwebp (version %(libwebp)s): WebP is a modern image format that provides
    superior lossless and lossy compression for images on the web. Using WebP,
    webmasters and web developers can create smaller, richer images that make
    the web faster.
* Audio and video
  + LAME (version %(LAME)s): LAME is a high quality MPEG Audio Layer III (MP3)
    encoder licensed under the LGPL.
    Run lame with the --help option to get some help on the command line options
    of the lame command line tool. There is also a manual page for the lame
    command. The API is very poorly documented (basically through the source code).
  + libopus (version %(opus)s): Opus is a totally open, royalty-free, highly versatile
    audio codec. Opus is unmatched for interactive speech and music transmission over
    the Internet, but is also intended for storage and streaming applications. It is
    standardized by the Internet Engineering Task Force (IETF) as RFC 6716
    which incorporated technology from Skype’s SILK codec and Xiph.Org’s
    CELT codec.
  + libogg (version %(ogg)s): Ogg is a multimedia container format, and the native file and
    stream format for the Xiph.org multimedia codecs. As with all Xiph.org
    technology is it an open format free for anyone to use.
    As with most container formats it encapsulates raw compressed data and allows
    the interleaving of audio and video data inside a single convenient format.
    Other examples of container formats are Quicktime .mov, the MPEG program
    stream, and AVI.
    In addition to encapsulation and interleave of multiple data streams, Ogg
    provides packet framing, error detection, and periodic timestamps for
    seeking, and in a small, bounded percentage bitrate overhead.
    Ogg is a stream oriented container, meaning it can be written and read in
    one pass, making it a natural fit for internet streaming and use in
    processing pipelines. This stream orientation is the major design
    difference over other file-based container formats.
  + libvorbis (version %(vorbis)s): Ogg Vorbis is a fully open, non-proprietary,
    patent-and-royalty-free, general-purpose compressed audio format for mid to high
    quality (8kHz-48.0kHz, 16+ bit, polyphonic) audio and music at fixed and variable
    bitrates from 16 to 128 kbps/channel. This places Vorbis in the same
    competitive class as audio representations such as MPEG-4 (AAC), and
    similar to, but higher performance than MPEG-1/2 audio layer 3, MPEG-4
    audio (TwinVQ), WMA and PAC.
    The bitstream format for Vorbis I was frozen Monday, May 8th 2000.
    All bitstreams encoded since will remain compatible with all future
    releases of Vorbis.
  + FLAC (version %(FLAC)s): FLAC stands for Free Lossless Audio Codec, an audio format
    similar to MP3, but lossless, meaning that audio is compressed in FLAC
    without any loss in quality. This is similar to how Zip works, except with FLAC you
    will get much better compression because it is designed specifically for audio, and
    you can play back compressed FLAC files in your favorite player (or your car or home
    stereo, see supported devices) just like you would an MP3 file.
    FLAC stands out as the fastest and most widely supported lossless audio codec,
    and the only one that at once is non-proprietary, is unencumbered by patents,
    has an open-source reference implementation, has a well documented format
    and API, and has several other independent implementations.
    FLAC is compiled with support for the Ogg container format but without
    XMMS plugin.
  + libsndfile (version %(sndfile)s): Libsndfile is a C library for reading and
    writing files containing sampled sound (such as MS Windows WAV and the Apple/SGI
    AIFF format) through one standard library interface. It is released in source
    code format under the Gnu Lesser General Public License.
    The library was written to compile and run on a Linux system but should compile
    and run on just about any Unix (including MacOS X). There are also pre-compiled
    binaries available for 32 and 64 bit windows.
    It was designed to handle both little-endian (such as WAV) and big-endian (such
    as AIFF) data, and to compile and run correctly on little-endian (such as Intel
    and DEC/Compaq Alpha) processor systems as well as big-endian processor systems
    such as Motorola 68k, Power PC, MIPS and Sparc. Hopefully the design of the
    library will also make it easy to extend for reading and writing new sound file
    formats.
    This module includes support for the FLAC, Opus and OggVorbis codecs, but does
    not include support for the obsoleet Speex codec. It also does not include support
    for ALSA and SQLite.
  + x264 (version v%(x264)s): x264 is a free software library and
    application for encoding video streams into the H.264/MPEG-4 AVC compression
    format, and is released under the terms of the GNU GPL. It is developed by
    the VideoLAN organization.
  + x265 (version %(x265)s): x265 is a free software library and application for
    encoding video streams into the H.265 AVC compression format, and is released
    under the terms of the GNU GPL. It is developed by the VideoLAN organization.
    Documentation for the x265 command line tool is available through the --help
    command line option. Both the command line tool and API are also documented
    on the web.
  + libtheora (version %(theora)s): Theora was Xiph.Org's first publicly released
    video codec, intended for use within the Foundation's Ogg multimedia streaming
    system. Theora is derived directly from On2's VP3 codec, adds new features while
    allowing it a longer useful lifetime.
    This module includes the optional encoder but does not include the
    player.
* Networking, security and XML
  + cURL (version %(cURL)s): libcurl is a free and easy-to-use client-side
    URL transfer library, supporting DICT, FILE, FTP, FTPS, Gopher, HTTP, HTTPS,
    IMAP, IMAPS, LDAP, LDAPS, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMTP, SMTPS,
    Telnet and TFTP. libcurl supports SSL certificates, HTTP POST, HTTP PUT,
    FTP uploading, HTTP form based upload, proxies, cookies, user+password
    authentication (Basic, Digest, NTLM, Negotiate, Kerberos), file transfer
    resume, http proxy tunneling and more.
  + wget (version %(wget)s): GNU Wget is a free software package for retrieving
    files using HTTP, HTTPS and FTP, the most widely-used Internet protocols.
    It is a non-interactive command line tool, so it may easily be called from
    scripts, cron jobs, terminals without X-Windows support, etc.
  + expat (version %(expat)s): Expat is an XML parser library written in C.
    It is a stream-oriented parser in which an application registers handlers
    for things the parser might find in the XML document (like start tags).
    It provides the command line tool xmlwf and static and shared libraries.
  + libxml2 (version %(xml2)s): Libxml2 is the XML C parser and toolkit
    developed for the Gnome project (but usable outside of the Gnome platform),
    it is free software available under the MIT License. XML itself is a
    metalanguage to design markup languages, i.e. text language where semantic
    and structure are added to the content using extra "markup" information
    enclosed between angle brackets. HTML is the most well-known markup
    language. Though the library is written in C a variety of language bindings
    make it available in other environments.
    There are 3 command line tools: xmlcatalog to parse and manipulate XML
    or SGML catalog viles, xmllint which is a command-line XML parser and
    xml-config which provides information about the installed version of the
    library.
  + libxslt (version %(xslt)s): Libxslt is the XSLT C library developed for the
    GNOME project (but usable outside of the Gnome platform). XSLT itself is a
    an XML language to define transformation for XML. Libxslt is based on
    libxml2 the XML C library developed for the GNOME project. It also
    implements most of the EXSLT set of processor-portable extensions functions
    and some of Saxon's evaluate and expressions extensions.
    Users can either embed the library in their application or use xsltproc the
    command line processing tool. This library is free software and can be
    reused in commercial applications.
* Mathematical libraries
  + GSL (version %(GSL)s): The GNU Scientific Library, a numerical library for C and
    C++ programmers. The library provides a wide range of mathematical routines
    such as random number generators, special functions and least-squares fitting.
  + libcerf (version %(libcerf)s): a self-contained numeric library that provides an
    efficient and accurate implementation of complex error functions, along with
    Dawson, Faddeeva, and Voigt functions.
    Documentation in manual pages section 3: cdawson, cerf, cerfc, cerfcx, cerfi,
    dawson, erfcx, erfi, im_w_of_x, voigt and w_of_z
* Arbitrary precision mathematics
  + GMP (version %(GMP)s): a free library for arbitrary precision arithmetic,
    operating on signed integers, rational numbers, and floating-point numbers.
    There is no practical limit to the precision except the ones implied by the
    available memory in the machine GMP runs on. GMP has a rich set of
    functions, and the functions have a regular interface.
    There is a web-based document and support via the info command (info gmp)
  + MPFR (version %(MPFR)s): The MPFR library is a C library for multiple-precision
    floating-point computations with correct rounding. MPFR is based on the GMP
    multiple-precision library.
    The main goal of MPFR is to provide a library for multiple-precision
    floating-point computation which is both efficient and has a well-defined
    semantics. It copies the good ideas from the ANSI/IEEE-754 standard for
    double-precision floating-point arithmetic (53-bit significand).
    MPFR is free. It is distributed under the GNU Lesser General Public License.
  + MPC (version %(MPC)s): GNU MPC is a C library for the arithmetic of complex
    numbers with arbitrarily high precision and correct rounding of the result.
    It extends the principles of the IEEE-754 standard for fixed precision real
    floating point numbers to complex numbers, providing well-defined semantics
    for every operation. At the same time, speed of operation at high precision
    is a major design goal.
    The library is built upon and follows the same principles as GNU MPFR.
    MPFR is free. It is distributed under the GNU Lesser General Public License.
  + mpdecimal (version %(mpdecimal)s): The libmpdecimal library, a package for
    correctly-rounded arbitrary precision decimal floating point arithmetic.
    libmpdec is a complete implementation of the General Decimal Arithmetic
    Specification. The specification, written by Mike Cowlishaw from IBM,
    defines a general purpose arbitrary precision data type together with
    rigorously specified functions and rounding behavior. As described in the
    scope section of the specification, libmpdec will - with minor restrictions -
    also conform to the IEEE 754-2008 Standard for Floating-Point Arithmetic,
    provided that the appropriate context parameters are set.
* Drawing graphics
  + pixman (version %(pixman)s): a low-level software library for pixel manipulation,
    providing features such as image compositing and trapezoid rasterization.
    Important users of pixman are the cairo graphics library and the X server.
    Pixman is free and open source software. It is available to be redistributed
    and/or modified under the terms of the MIT license.
  + freetype (version %(freetype)s): TODO
  + fontconfig (version %(fontconfig)s): a library designed to provide system-wide
    font configuration, customization and application access.
    The package contains a number of command line tools and a shared library.
* Unicode and multilingual support
  + FriBidi (version %(fribidiv)s): Free Implementation of the Unicode Bidirectional
    Algorithm.
  + gettext (version %(gettext)s): GNU gettest is a support library for
    multilingual programs developed in the GNU Translation Project. It
    offers to programmers, translators, and even users, a well integrated set of
    tools and documentation. Specifically, the GNU `gettext' utilities are a set
    of tools that provides a framework to help other GNU packages produce
    multi-lingual messages. These tools include a set of conventions about how
    programs should be written to support message catalogs, a directory and file
    naming organization for the message catalogs themselves, a runtime library
    supporting the retrieval of translated messages, and a few stand-alone
    programs to massage in various ways the sets of translatable strings, or
    already translated strings. A special GNU Emacs mode also helps interested
    parties in preparing these sets, or bringing them up to date.
  + ICU (version %(ICU)s): a mature, widely used set of C/C++ and Java libraries
    providing Unicode and Globalization support for software applications.
  + libiconv (version %(iconv)s): This library provides an implementation of the
    iconv() function call to convert various encodings to/from Unicode.
  + libunistring (version %(unistring)s): provides functions for manipulating Unicode
    strings and for manipulating C strings according to the Unicode standard.
* Miscellaneous
  + double-conversion (version %(DoubleConv)s): provides binary-decimal and decimal-binary
    routines for IEEE doubles.
    The library consists of efficient conversion routines that have been
    extracted from the V8 JavaScript engine. The code has been refactored and
    improved so that it can be used more easily in other projects.
  + file (version %(filev)s): The file command is "a file type guesser", that
    is, a command-line tool that tells you in words what kind of data a file
    contains. Unlike most GUI systems, command-line UNIX systems - with this
    program leading the charge - don't rely on filename extentions to tell you
    the type of a file, but look at the file's actual contents. This is, of
    course, more reliable, but requires a bit of I/O.This is a
    re-implementation of the original file command shipped with Bell Labs UNIX.
  + gc (version %(gc)s): gc is the Boehm-Demers-Weiser conservative garbage
    collector, a garbage collecting replacement for C malloc or C++ new.
  + GDBM (version %(GDBM)s): GNU dbm (or GDBM, for short) is a library of database functions that use
    extensible hashing and work similar to the standard UNIX dbm. These routines
    are provided to a programmer needing to create and manipulate a hashed
    database.
    The basic use of GDBM is to store key/data pairs in a data file. Each key
    must be unique and each key is paired with only one data item.
    The library provides primitives for storing key/data pairs, searching and
    retrieving the data by its key and deleting a key along with its data. It
    also support sequential iteration over all key/data pairs in a database.
    For compatibility with programs using old UNIX dbm function, the package
    also provides traditional dbm and ndbm interfaces.
  + libevent (version %(event)s): The libevent API provides a mechanism to
    execute a callback function when a specific event occurs on a file
    descriptor or after a timeout has been reached. Furthermore, libevent
    also support callbacks due to signals or regular timeouts.
  + libffi (version %(ffi)s): FFI stands for Foreign Function Interface.
    A foreign function interface is the popular name for the interface that
    allows code written in one language to call code written in another
    language. The libffi library really only provides the lowest, machine
    dependent layer of a fully featured foreign function interface. A layer must
    exist above libffi that handles type conversions for values passed between
    the two languages.
    The library provides a portable, high level programming interface to various
    calling conventions. This allows a programmer to call any function specified
    by a call interface description at run-time.
  + libyaml (version %(yaml)s): a YAML 1.1 parser and emitter written in C.
  + LMDB (version %(LMDB)s): is an extraordinarily fast, memory-efficient database developed
    for the OpenLDAP Project. With memory-mapped files, it has the read performance
    of a pure in-memory database while retaining the persistence of standard
    disk-based databases.
  + PCRE (version %(PCRE)s): The PCRE library is a set of functions that implement
    regular expression pattern matching using the same syntax and semantics as
    Perl 5. PCRE has its own native API, as well as a set of wrapper functions
    that correspond to the POSIX regular expression API. The PCRE library is
    free, even for building proprietary software.
    The package includes the command line tools pcregrep, pcretest and
    pcre-config, documented through man pages. API documentation is available
    through man pcre.
  + PCRE2 (version %(PCRE2)s: More modern version of PCRE.
    The package includes the command line tools pcre2grep, pcre2test and
    pcre2-config, documented through man pages. API documentation is available
    through man pcre2.
  + UDUNITS (version %(UDUNITS)s): The UDUNITS package supports units of physical
    quantities. Its C library provides for arithmetic manipulation of units and for
    conversion of numeric values between compatible units. The package contains an
    extensive unit database, which is in XML format and user-extendable. The package
    also contains a command-line utility for investigating units and converting
    values.
    This module provides both static and shared libraries, and a command line
    utility.
  + util-linux (version %(utillinux)s): A random collection of Linux utilities
    from the Linux kernel developers.
  + libtool (version %(libtool)s): Normally more a build tool, but included for those
    programs that actually link to it.
""" % {
    'ncurses':      local_ncurses_version,
    'libreadline':  local_libreadline_version,
    'brotli':       local_brotli_version,
    'bzip2':        local_bzip2_version,
    'lz4':          local_lz4_version,
    'Szip':         local_Szip_version,
    'XZ':           local_XZ_version,
    'zlib':         local_zlib_version,
    'gzip':         local_gzip_version,
    'lzip':         local_lzip_version,
    'zstd':         local_zstd_version,
    'libb2':        local_libb2_version,
    'LZO':          local_LZO_version,
    'snappy':       local_snappy_version,
    'blosc':        local_blosc_version,
    'libdeflate':   local_libdeflate_version,
    'libarchive':   local_libarchive_version,
    'giflib':       local_giflib_version,
    'JasPer':       local_JasPer_version,
    'libjpegturbo': local_libjpegturbo_version,
    'libpng':       local_libpng_version,
    'libtiff':      local_libtiff_version,
    'libwebp':      local_libwebp_version,
    'LAME':         local_LAME_version,
    'opus':         local_libopus_version,
    'ogg':          local_libogg_version,
    'vorbis':       local_libvorbis_version,
    'FLAC':         local_FLAC_version,
    'sndfile':      local_libsndfile_version,
    'x264':         local_x264_version,
    'x265':         local_x265_version,
    'theora':       local_libtheora_version,
    'cURL':         local_cURL_version,
    'wget':         local_wget_version,
    'expat':        local_expat_version,
    'xml2':         local_libxml2_version,
    'xslt':         local_libxslt_version,
    'GSL':          local_GSL_version,
    'libcerf':      local_libcerf_version,
    'GMP':          local_GMP_version,
    'MPFR':         local_MPFR_version,
    'MPC':          local_MPC_version,
    'mpdecimal':    local_mpdecimal_version,
    'pixman':       local_pixman_version,
    'freetype':     local_freetype_version,
    'fontconfig':   local_fontconfig_version,
    'fribidiv':     local_fribidi_version,
    'gettext':      local_gettext_version,
    'ICU':          local_ICU_version,
    'iconv':        local_libiconv_version,
    'unistring':    local_libunistring_version,
    'DoubleConv':   local_double_conv_version,
    'filev':        local_file_version,
    'gc':           local_gc_version,
    'GDBM':         local_GDBM_version,
    'event':        local_libevent_version,
    'ffi':          local_libffi_version,
    'yaml':         local_libyaml_version,
    'LMDB':         local_LMDB_version,
    'PCRE':         local_PCRE_version,
    'PCRE2':        local_PCRE2_version,
    'UDUNITS':      local_UDUNITS_version,
    'utillinux':    local_util_version,
    'libtool':      local_libtool_version,
}

docurls = [
    'ncurses:       Web-based documentation on https://www.gnu.org/software/ncurses/',
    'libreadline:   Web-based readline user interface documentation: https://tiswww.cwru.edu/php/chet/readline/rluserman.html',
    'libreadline:   Web-based libreadline documentation: https://tiswww.cwru.edu/php/chet/readline/readline.html',
    'libreadline:   Web-based libhistory documentation: https://tiswww.cwru.edu/php/chet/readline/history.html',
    'brotli:        Home page: https://github.com/google/brotli',
    'bzip2:         Web-based documentation on http://www.bzip.org/docs.html',
    'LZ4:           Web-based documentation on https://github.com/lz4/lz4',
    'Szip:          Web pages on http://www.hdfgroup.org/doc_resource/SZIP/',
    'XZ Utils:      Man pages for the command line utilities',
    'zlib:          Web-based manual on https://zlib.net/manual.html',
    'gzip:          Web-based documentation on https://www.gnu.org/software/gzip/manual/',
    'gzip:          Man pages for all commands (gzip, gunzip, gzexe, zcat, zcmp, zdiff, zforce, zgrep, zless, zmore, znew) in Section 1',
    'lzip:          Home page: https://www.nongnu.org/lzip/',
    'lzip:          Web-based manual on https://www.nongnu.org/lzip/manual/lzip_manual.html',
    'zstd:          Web-based documentation via the home page: http://www.zstd.net/',
    'libb2:         Home page: https://github.com/BLAKE2/libb2',
    'LZO:           Home page http://www.oberhumer.com/opensource/lzo/',
    'snappy:        Web-based information on https://github.com/google/snappy',
    'Blosc:         Home page https://blosc.org/',
    'libdeflate:    Home page: https://github.com/ebiggers/libdeflate',
    'libarchive:    Some web-based documentation on https://www.libarchive.org/',
    'giflib:        Home page with links to the documentation on http://giflib.sourceforge.net/',
    'libjpeg-turbo: Web-based documentation: https://libjpeg-turbo.org/Documentation',
    'libpng:        Web-based documentation on http://www.libpng.org/pub/png/libpng.html',
    'libwebp:       Home page with documentation on https://developers.google.com/speed/webp/',
    'libwebp:       Manual pages for cwebp and dwebp in section 1',
    'libopus:       Web-based documentation on the home page: http://opus-codec.org/',
    'libogg:        Web-based documentation on https://xiph.org/ogg/doc/',
    'libvorbis:     Web-based documentation on https://xiph.org/vorbis/doc/',
    'FLAC:          Web-based documentation on https://xiph.org/flac/documentation.html',
    'FLAC:          Man pages in section 1 for the flac and metaflac commands',
    'libsndfile:    Web-based API documentation on http://www.mega-nerd.com/libsndfile/api.html',
    'libsndfile:    Manual pages for the tools in section 1',
    'x264:          Some information on http://www.videolan.org/developers/x264.html',
    'x265:          Web-based documentation: http://x265.readthedocs.io/en/default/',
    'libtheora:     Web-based documentation on https://www.theora.org/doc/',
    'GSL:           On-line manual: https://www.gnu.org/software/gsl/doc/html/index.html',
    'libcerf:       Homepage: https://jugit.fz-juelich.de/mlz/libcerf',
    'GMP:           Web-based documentation: https://gmplib.org/manual/',
    'mpdecimal:     Web-based documentation: https://www.bytereef.org/mpdecimal/doc/libmpdec/index.html',
    'cURL:          Web-based documentation: https://curl.haxx.se/docs/',
    'cURL:          Man pages for the curl and curl-config commands (section 1) and the library functions (section 3)',
    'wget:          Man page for the wget command (section 1)'
    'expat:         Web-based documentation: https://libexpat.github.io/doc/',
    'expat:         Man page for xmlwf',
    'ICU:           Web-based documentation at http://site.icu-project.org/home',
    'ICU:           Man pages for seveal of the commands in section 1 and section 8',
    'libxml2:       Web-based documentation: http://xmlsoft.org/html/index.html',
    'libxml2:       Man pages for the command line tools xmlcatalog, xmllint and xml-config and for libxml',
    'libxslt:       Web-based documentation on the home page: http://xmlsoft.org/libxslt/',
    'libxslt:       Man pages for xsltproc, libxslt and libexslt',
    'double-conversion: Web-based documentation on https://github.com/google/double-conversion',
    'file:          Home page is https://www.darwinsys.com/file/',
    'FriBidi:       Home page is https://github.com/fribidi/fribidi',
    'gc:            Web-based documentation on the home page http://hboehm.info/gc/',
    'GDBM:          Web-based documentation: http://puszcza.gnu.org.ua/software/gdbm/manual/gdbm.html',
    'GDBM:          Support for the info command (info gdbm)',
    'gettext:       Web-based documentation: https://www.gnu.org/software/gettext/manual/index.html',
    'gettext:       Man pages for all command line tools (man section 1) and for the API (man section 3)',
    'libevent:      Web-based documentation on the home page: https://libevent.org/',
    'libffi:        Man pages for the library (ffi) and the functions ffi_prep_cif, ffi_prep_cif_var and ffi_call',
    'libidn:        Web-based manual pages on https://www.gnu.org/software/libidn/manual',
    'libidn:        Man pages for the idn command (section 1) and the API (section 3)',
    'libidn2:       Web-based manual pages on https://www.gnu.org/software/libidn2/manual',
    'libidn2:       Man pages for the idn2 command (section 1) and the API (section 3)',
    'libiconv:      Web-based documentation on https://www.gnu.org/software/libiconv/',
    'libiconv:      Manual pages for the iconv command and iconv_open, iconv_close, iconvctl, iconv_open_into',
    'libunistring:  Web-based manual: https://www.gnu.org/software/libunistring/manual/libunistring.html',
    'libunistring:  Supports the info command, start with info libunistring',
    'LMDB:          Man pages in section 1 for mdb_copy, mdb_dump, mdb_load and mdb_stat',
    'PCRE:          Web-based documentation: http://www.pcre.org/original/doc/html/',
    'PCRE2:         Web-based documentation: http://www.pcre.org/current/doc/html/',
    'PCRE2:         Manual pages in section 1 (pcre2grep, pcre2test) and 3 (API, start with pcre2)',
    'util-linux:    Documented through man pages',
    'freetype:      Web-based documentation on https://www.freetype.org/freetype2/docs/documentation.html',
    'fontconfig:    Web-based documentation on https://www.freedesktop.org/wiki/Software/fontconfig/',
]

local_bzip2_major_minor =  '.'.join(local_bzip2_version.split('.')[:2])
local_util_major_minor =   '.'.join(local_util_version.split('.')[:2])

toolchain =     {'name': 'GCCcore', 'version': local_gcc_version}
toolchainopts = {'pic': True} # To ensure that we can link static libraries into shared ones.

builddependencies = [
#    ('binutils',   local_binutils_version, '', ('GCCcore', local_gcc_version)),
    ('binutils',   local_binutils_version, ),
    ('buildtools', version,                '', True),
]

dependencies = [
    ('zlib', local_zlib_version),
]

osdependencies = [
    ('openssl-devel', 'libssl-dev', 'libopenssl-devel'), # For wget
#    ('gnutls-devel', 'gnutls-dev', 'libgnutls-devel'),   # Alternative for wget, but then configopts needs to be removed.
]

import os as local_os
local_UAarch = local_os.environ['VSC_ARCH_LOCAL']
if local_UAarch == "ivybridge":
    local_snappy_opts = ' -DSNAPPY_REQUIRE_AVX=ON'
else:
    local_snappy_opts = ' -DSNAPPY_REQUIRE_AVX2=ON'

default_easyblock = 'ConfigureMake'

components = [
#
# Duplicate from buildtools, needed for the libraries.
#
    ('libtool', local_libtool_version, { # Needs M4 from buildtools.
        'easyblock':   'ConfigureMake',
        'sources':     [SOURCELOWER_TAR_XZ],
        'source_urls': [GNU_SOURCE],
        'checksums':   ['7c87a8c2c8c0fc9cd5019e402bed4292462d00a718a7cd5f11218153bf28b26f'],
        'start_dir':   '%(namelower)s-%(version)s'
        }),
#
# Terminal libraries
#
    ('ncurses', local_ncurses_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCE_TAR_GZ,
                          'source_urls': [GNU_SOURCE]
                       } ],
        'patches':     ['ncurses-%(version)s_gcc-5.patch'],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--with-shared --enable-overwrite', # First build: default build.
    }),
    ('ncurses', local_ncurses_version, {
        'easyblock':   'ConfigureMake',
        'sources':       [ {
                            'filename':    SOURCE_TAR_GZ,
                            'source_urls': [GNU_SOURCE]
                         } ],
        'patches':       ['ncurses-%(version)s_gcc-5.patch'],
        'start_dir':     '%(namelower)s-%(version)s',
        'preconfigopts': 'make distclean && ',
        'configopts':    '--with-shared --enable-overwrite --enable-ext-colors --enable-widec --includedir=%(installdir)s/include/ncursesw/' # Second build: the UTF-8 enabled version (ncursesw)
    }),
    ('libreadline', local_libreadline_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    'readline-%(version)s.tar.gz',
                          'source_urls': ['http://ftp.gnu.org/gnu/readline']
                       }],
        'start_dir':   'readline-%(version)s',
        'preconfigopts': "LD_LIBRARY_PATH=%(installdir)s/lib:$LD_LIBRARY_PATH LDFLAGS='-L%(installdir)s/lib -lncurses'",
    }),
#
# There is a tricky circular dependency between gettext and libiconv according to the libiconv
# documentation/ libiconv gets more features if it finds gettext, but the latter also can do
# more when it finds libiconv.
# Note that gettext also needs libcurses but for now we build with built-in libxml2 and libunistring
# to avoid further complicating matters.
#
    ('gettext', local_gettext_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_XZ,
                          'source_urls': [GNU_SOURCE]
                       } ],
        'start_dir':     '%(namelower)s-%(version)s',
#        'preconfigopts': 'PKG_CONFIG_PATH=%(installdir)s/lib/pkgconfig:%(installdir)s/lib64/pkgconfig:$PKG_CONFIG_PATH ' + \
#                         'CPATH=%(installdir)s/include:$CPATH ' + \
#                         'LD_LIBRARY_PATH=%(installdir)s/lib:$LD_LIBRARY_PATH ' + \
#                         'LIBRARY_PATH=%(installdir)s/lib:$LIBRARY_PATH ',
        'configopts':    '--without-emacs --with-libncurses-prefix=%(installdir)s --with-included-libunistring --with-included-libxml',
    }),
    ('libiconv', local_libiconv_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': [GNU_SOURCE]
                       } ],
        'start_dir':   '%(namelower)s-%(version)s'
    }),
    # Now recompile gettext to enable the additional features
    ('gettext', local_gettext_version, {
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_XZ,
                          'source_urls': [GNU_SOURCE]
                       } ],
        'start_dir':     '%(namelower)s-%(version)s',
        'preconfigopts': 'make distclean && ',
#        'preconfigopts': 'make distclean && ' + \
#                         'PKG_CONFIG_PATH=%(installdir)s/lib/pkgconfig:%(installdir)s/lib64/pkgconfig:$PKG_CONFIG_PATH ' + \
#                         'CPATH=%(installdir)s/include:$CPATH ' + \
#                         'LD_LIBRARY_PATH=%(installdir)s/lib:$LD_LIBRARY_PATH ' + \
#                         'LIBRARY_PATH=%(installdir)s/lib:$LIBRARY_PATH ',
        'configopts':    '--without-emacs --with-libncurses-prefix=%(installdir)s --with-included-libunistring --with-included-libxml',
    }),
#
# Unicode and multi-language support
#
    ('FriBidi', local_fribidi_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          # https://github.com/fribidi/fribidi/releases/download/v1.0.9/fribidi-1.0.9.tar.xz
                          'filename':    SOURCELOWER_TAR_XZ,
                          'source_urls': ['https://github.com/%(namelower)s/%(namelower)s/releases/download/v%(version)s']
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--disable-docs',
    }),
    ('ICU', local_ICU_version, { # Unicode/multilanguage support
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          # https://github.com/unicode-org/icu/archive/release-66-1.zip
                          'filename':    'release-%(version_major)s-%(version_minor)s.zip',
                          'source_urls': ['https://github.com/unicode-org/icu/archive']
                       } ],
        'start_dir':   '%(namelower)s-release-'+ local_ICU_version.replace('.','-') + '/icu4c/source',
    }),
    ('libunistring', local_libunistring_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_XZ,
                          'source_urls': [GNU_SOURCE]
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'parallel':    1
    }),
#
# File compression tools
#
    ('brotli', local_brotli_version, {
        'easyblock':   'CMakeMake',
        'separate_build_dir': False,
        'sources':     [ {
                          'download_filename': 'v%(version)s.tar.gz',
                          'filename':          SOURCELOWER_TAR_GZ,
                          'source_urls':       ['https://github.com/google/brotli/archive']
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
    }),
    ('bzip2', local_bzip2_version, { # EasyBlock works correctly in 4.5.0 and later.
        'easyblock':   'EB_bzip2',
        # The bzip2 EasyBlock does not work in a bundle since there is a problem with with_shared_libs
        # https://sourceforge.net/projects/bzip2/files/bzip2-1.0.6.tar.gz/download
        'sources':     [ {
                          'filename':    SOURCE_TAR_GZ,
                          'source_urls': ['https://sourceware.org/pub/%(name)s/']
                       } ],
        'patches':     ['bzip2-%(version)s-pkgconfig-manpath.patch'],
        'start_dir':   '%(namelower)s-%(version)s',
    }),
    ('lz4', local_lz4_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    'v%(version)s.tar.gz',
                          'source_urls': ['https://github.com/lz4/lz4/archive/']
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'skipsteps':   ['configure'],
        'installopts': "PREFIX=%(installdir)s",
    }),
    ('Szip', local_Szip_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': ['http://www.hdfgroup.org/ftp/lib-external/szip/%(version)s/src']
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--with-pic'
    }),
#    ('zlib', local_zlib_version, { # No longer included since 2021b, see the README.md file.
#        'sources':     [ {
#                          # https://www.zlib.net/zlib-1.2.11.tar.gz
#                          'filename':    SOURCELOWER_TAR_GZ,
#                          'source_urls': ['https://www.zlib.net/']
#                       } ],
#        'start_dir':   '%(namelower)s-%(version)s'
#    }),
    ('gzip', local_gzip_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': [GNU_SOURCE]
                       } ],
        'start_dir':   '%(namelower)s-%(version)s'
    }),
    ('XZ', local_XZ_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_XZ,
                          'source_urls': ['http://tukaani.org/xz/']
                       } ],
        'patches':     ['XZ-5.2.2_compat-libs.patch'],
        'start_dir':   '%(namelower)s-%(version)s',
#        'configopts':  '--disable-nls --disable-xz --disable-xzdec',  # First build without the need for gettext, we'll rebuild after building gettext.
    }),
    ('lzip', local_lzip_version, {
        'sources':     [ {
                          # http://download.savannah.gnu.org/releases/lzip/lzip-1.21.tar.gz
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': ['http://download.savannah.gnu.org/releases/lzip']
                       } ],
        'start_dir':   '%(namelower)s-%(version)s'
    }),
    ('zstd', local_zstd_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                           'download_filename': 'v%(version)s.tar.gz',
                           'filename':          SOURCELOWER_TAR_GZ,
                           'source_urls':       ['https://github.com/facebook/zstd/archive/']
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'skipsteps':   ['configure'],
        'installopts': "PREFIX=%(installdir)s"
    }),
    ('libb2', local_libb2_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [SOURCELOWER_TAR_GZ],
        'source_urls': ['https://github.com/BLAKE2/libb2/releases/download/v%(version)s'],
        'start_dir':   '%(namelower)s-%(version)s',
    }),
    ('LZO', local_LZO_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [SOURCELOWER_TAR_GZ],
        'source_urls': ['https://www.oberhumer.com/opensource/lzo//download'],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--enable-shared --enable-static',
    }),
    ('snappy', local_snappy_version, { # Needs zlib and LZO - static build
        'easyblock':   'CMakeMake',
        'separate_build_dir': False,
        'sources':     [ {
                          'download_filename': '%(version)s.tar.gz',
                          'filename':          SOURCELOWER_TAR_GZ,
                          'source_urls':       ['https://github.com/google/snappy/archive/'],
                          'extract_cmd':       "mkdir %(namelower)s-%(version)s-static ; tar -x --strip-components=1 -C %(namelower)s-%(version)s-static -f %s"
                       } ],
        'patches':     ['%(name)s-%(version)s_inline-functions.patch'],
        'start_dir':   '%(namelower)s-%(version)s-static',
        'build_type':  'Release',
        'configopts':  '-DBUILD_SHARED_LIBS=OFF -DSNAPPY_BUILD_TESTS=OFF -DSNAPPY_BUILD_BENCHMARKS=OFF' + local_snappy_opts,
    }),
    ('snappy', local_snappy_version, { # NEeds zlib and LZO - shared build
        'easyblock':   'CMakeMake',
        'separate_build_dir': False,
        'sources':     [ {
                          'download_filename': '%(version)s.tar.gz',
                          'filename':          SOURCELOWER_TAR_GZ,
                          'source_urls':       ['https://github.com/google/snappy/archive/'],
                          'extract_cmd':       "mkdir %(namelower)s-%(version)s-shared ; tar -x --strip-components=1 -C %(namelower)s-%(version)s-shared -f %s"
                       } ],
        'patches':     ['%(name)s-%(version)s_inline-functions.patch'],
        'start_dir':   '%(namelower)s-%(version)s-shared',
        'build_type':  'Release',
        'configopts':  '-DBUILD_SHARED_LIBS=ON -DSNAPPY_BUILD_TESTS=OFF -DSNAPPY_BUILD_BENCHMARKS=OFF'  + local_snappy_opts
    }),
    ('Blosc', local_blosc_version, {
        'easyblock': 'CMakeMake',
        'separate_build_dir': False,
        'sources':   [ {
                         'download_filename': 'v%(version)s.tar.gz',
                         'filename':          SOURCELOWER_TAR_GZ,
                         'source_urls':       ['https://github.com/Blosc/c-blosc/archive/']
                     } ],
        'start_dir': 'c-blosc-%(version)s',
    }),
    ('libdeflate', local_libdeflate_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          # https://github.com/ebiggers/libdeflate/archive/v1.5.zip
                          'download_filename': 'v%(version)s.zip',
                          'filename':          SOURCELOWER_ZIP,
                          'source_urls':       ['https://github.com/ebiggers/libdeflate/archive/']
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'skipsteps':   ['configure'],
        'installopts': "PREFIX=%(installdir)s"
    }),
    ('libarchive', local_libarchive_version, {
        'easyblock': 'CMakeMake',
        'separate_build_dir': False,
        'sources':   [ {
                         # https://www.libarchive.org/downloads/libarchive-3.3.3.tar.gz
                         # https://github.com/libarchive/libarchive/archive/v3.4.0.tar.gz
                         'download_filename': 'v%(version)s.tar.gz',
                         'filename':          SOURCELOWER_TAR_GZ,
                         'source_urls':       [('https://github.com/libarchive/libarchive/archive')]
                     } ],
        'start_dir': '%(namelower)s-%(version)s',
    }),
#
# Graphics file formats
#
    ('giflib', local_giflib_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCE_TAR_GZ,
                          'source_urls': [('http://sourceforge.net/projects/giflib/files', 'download')]
                       } ],
        'start_dir':   '%(name)s-%(version)s',
        'skipsteps':   ['configure'],
        'buildopts':   'CC="$CC" CFLAGS="$CXXFLAGS"',
        'installopts': "PREFIX=%(installdir)s",
    }),
     ('libjpeg-turbo', local_libjpegturbo_version, {
        'easyblock':   'CMakeMake',
        'separate_build_dir': False,
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': [SOURCEFORGE_SOURCE]
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '-DWITH_JPEG7=1 -DWITH_JPEG8=1 -DWITH_12BIT=0', # 12-bit support broken during configure step.
     }),
    ('JasPer', local_JasPer_version, {
        'easyblock':     'CMakeMake',
        'separate_build_dir': False,
        'sources':       [ { # https://github.com/jasper-software/jasper/releases/download/version-2.0.33/jasper-2.0.33.tar.gz
                             # https://github.com/jasper-software/jasper/archive/refs/tags/version-2.0.33.tar.gz
                            'filename':          SOURCELOWER_TAR_GZ,
                            'download_filename': 'version-%(version)s.tar.gz',
                            'source_urls':       ['https://github.com/jasper-software/jasper/archive/refs/tags/']
                         } ],
        'start_dir':     '%(namelower)s-version-%(version)s',
        'preconfigopts': 'cd %(builddir)s/%(namelower)s-%(version)s ; ',
        'configopts':    '-DJAS_ENABLE_DOC=0 -DJAS_ENABLE_OPENGL=0 -DJAS_ENABLE_LIBJPEG=1 -DALLOW_IN_SOURCE_BUILD=ON ',
        'prebuildopts':  'cd %(builddir)s/%(namelower)s-%(version)s ; ',
    }),
    ('libpng', local_libpng_version, { # Needs zlib!
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_XZ,
                          'source_urls': ['https://download.sourceforge.net/libpng']
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'preconfigopts': 'CPATH=%(installdir)s/include:$CPATH LD_LIBRARY_PATH=%(installdir)s/lib:$LD_LIBRARY_PATH LDFLAGS="-L%(installdir)s/lib $LDFLAGS"',
        'configopts':  '--with-pic',
        'postinstallcmds':  ['ln -s %(installdir)s/include/libpng16 %(installdir)s/include/libpng']
    }),
    ('LibTIFF', local_libtiff_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    'tiff-%(version)s.tar.gz',
                          'source_urls': ['https://download.osgeo.org/libtiff/']
                       } ],
        'start_dir':   'tiff-%(version)s'
    }),
    ('libwebp', local_libwebp_version, { # Needs giflib, libjpeg-turbo, libpng and libTIFF
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': ['https://storage.googleapis.com/downloads.webmproject.org/releases/webp']
                       } ],
        'start_dir':   '%(name)s-%(version)s',
        'configopts':  '--enable-libwebpmux --enable-libwebpdemux --enable-libwebpdecoder --enable-libwebpextras',
    }),
    ('LibTIFF', local_libtiff_version, { # Recompile as libwebp also adds features to LibTIFF.
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    'tiff-%(version)s.tar.gz',
                          'source_urls': ['https://download.osgeo.org/libtiff/']
                       } ],
        'start_dir':   'tiff-%(version)s'
    }),
#
# Audio and video file formats
#
    ('x264', local_x264_version, {
        'easyblock':   'ConfigureMake',
        'sources':       [ {
                            'download_filename': 'x264-%s.tar.gz' % local_x264_commit,
                            'filename':          SOURCE_TAR_GZ,
                            'source_urls':       ['https://code.videolan.org/videolan/x264/-/archive/%s/' % local_x264_commit]
                         } ],
        'start_dir':     'x264-' + local_x264_commit,
        'configopts':    '--enable-shared --enable-static',
        'installopts':   ' && mkdir -p %(installdir)s/doc && cp -r doc/* %(installdir)s/doc'
    }),
    ('x265', local_x265_version, {
        'easyblock':     'CMakeMake',
        'separate_build_dir': False,
        'sources':       [ {
                            'filename':    '%(name)s_%(version)s.tar.gz',
                            'source_urls': ['https://bitbucket.org/multicoreware/x265_git/downloads/']
                         }],
        'start_dir':     '%(namelower)s_%(version)s/source',
    }),
    ('LAME', local_LAME_version, { # Needs ncurses!
        'easyblock':   'ConfigureMake',
        'sources':       [ {
                            'filename':    SOURCELOWER_TAR_GZ,
                            'source_urls': ['https://sourceforge.net/projects/lame/files/lame/%(version_major_minor)s/']
                         }],
        'start_dir':     '%(namelower)s-%(version)s',
        'preconfigopts': 'CPATH=%(installdir)s/include:$CPATH LD_LIBRARY_PATH=%(installdir)s/lib:$LD_LIBRARY_PATH LDFLAGS="-L%(installdir)s/lib $LDFLAGS" FRONTEND_LDADD="-L%(installdir)s/lib" ',
    }),
    ('libopus', local_libopus_version, {
        'easyblock':   'ConfigureMake',
        'sources':       [ {
                            'filename':    'opus-%(version)s.tar.gz',
                            'source_urls': ['https://archive.mozilla.org/pub/opus']
                         }],
        'start_dir':     'opus-%(version)s',
    }),
    ('libogg', local_libogg_version, {
        'easyblock':   'ConfigureMake',
        'sources':       [ {
                             'filename':    SOURCELOWER_TAR_XZ,
                             'source_urls': ['http://downloads.xiph.org/releases/ogg/']
                         } ],
        'start_dir':     '%(namelower)s-%(version)s',
        'preconfigopts': "sed -e 's/-O20 //' -i configure && ",
    }),
    ('libvorbis', local_libvorbis_version, { # Requires libogg
        'easyblock':   'ConfigureMake',
        'sources':       [ {
                             'filename':    SOURCELOWER_TAR_XZ,
                             'source_urls': ['http://downloads.xiph.org/releases/vorbis/']
                         } ],
        'start_dir':     '%(namelower)s-%(version)s',
    }),
    ('FLAC', local_FLAC_version, { # Requires libogg
        'sources':       [ {
                             'filename':    SOURCELOWER_TAR_XZ,
                             'source_urls': ['http://downloads.xiph.org/releases/flac/']
                         } ],
        'start_dir':     '%(namelower)s-%(version)s',
        'configopts':    '--disable-xmms-plugin',
    }),
    ('libsndfile', local_libsndfile_version, { # Requires libopus, libogg, libvorbis and FLAC
        'sources':       [ {
                             'download_filename': '%(version)s.zip',
                             'filename':          'libsndfile-%(version)s.zip',
                             'source_urls':       ['https://github.com/erikd/libsndfile/archive/']
                         } ],
        'start_dir':     '%(namelower)s-%(version)s',
        'preconfigopts': './autogen.sh && PKG_CONFIG_PATH="%(installdir)s/lib/pkgconfig:$PKG_CONFIG_PATH" ',
        'configopts':    '--disable-alsa --disable-sqlite '
    }),
    ('libtheora', local_libtheora_version, { # Requires libogg and libvorbis
        'easyblock':   'ConfigureMake',
        'sources':       [ {
                             'filename':    SOURCELOWER_ZIP,
                             'source_urls': ['http://downloads.xiph.org/releases/theora/']
                         } ],
        'start_dir':     '%(namelower)s-%(version)s',
        'preconfigopts': "sed -e 's/.srcdir.configure.*echo//' -i autogen.sh ;  ./autogen.sh && ",
        'configopts':    '--disable-sdltest --disable-examples'
    }),
#
# Network, security and XML
#
    ( 'cURL', local_cURL_version, { # USES zlib
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          # https://curl.haxx.se/download/curl-7.69.1.tar.xz
                          'filename':    SOURCELOWER_TAR_XZ,
                          'source_urls': ['https://curl.haxx.se/download/']
                       }],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--with-zlib=$EBROOTZLIB --with-openssl',
    }),
    ('expat', local_expat_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_BZ2,
                          'source_urls': [SOURCEFORGE_SOURCE]
                       }],
        'start_dir':   '%(namelower)s-%(version)s'
    }),
    ('libxml2', local_libxml2_version, { # Needs zlib. The configure also looks for XZ utilities (liblzma), but that depends on gettext which depends on libxml2...
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': ['http://xmlsoft.org/sources/','http://xmlsoft.org/sources/old/']
                       }],
        'start_dir':   '%(namelower)s-%(version)s',
#        'configopts':  'CC=$CC CXX=$CXX --with-pic --with-icu --with-zlib=$EBROOTZLIB --with-lzma=%(installdir)s --without-python --with-icu',
        'configopts':  'CC=$CC CXX=$CXX --with-pic --with-zlib=$EBROOTZLIB --with-lzma=%(installdir)s --without-python',
    }),
    ('libxslt', local_libxslt_version, { # Needs libxml2 and can find it through pkg-config, so configure that path.
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': ['http://xmlsoft.org/sources/','http://xmlsoft.org/sources/old/']
                       }],
        'start_dir':   '%(namelower)s-%(version)s',
        'preconfigopts': 'PKG_CONFIG_PATH=%(installdir)s/lib/pkgconfig:%(installdir)s/lib64/pkgconfig:$PKG_CONFIG_PATH ',
        'configopts':  '--with-pic --without-python',
    }),
    ('libidn', local_libidn_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': [GNU_SOURCE]
                       }],
        'start_dir':   'libidn-%(version)s',
    }),

    ('libidn2', local_libidn2_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': ['https://ftp.gnu.org/gnu/libidn/']
                       }],
        'start_dir':   'libidn2-%(version)s',
    }),
#    ('NSPR', NSPR_version, {
#        'sources':     [ {
#                          'filename':    SOURCELOWER_TAR_GZ,
#                          'source_urls': ['https://archive.mozilla.org/pub/nspr/releases/v%(version)s/src/']
#                       }],
#        'start_dir':   '%(namelower)s-%(version)s/nspr',
#        'configopts':  '--disable-debug --enable-optimize --enable-64bit',
#    }),
#    ('NSS', NSS_version, {
#        'sources':   [ {
#                        'filename':    SOURCELOWER_TAR_GZ,
#                        'source_urls': ['https://ftp.mozilla.org/pub/security/nss/releases/NSS_%(version_major)s_%(version_minor)s_RTM/src/']
#                     }],
#        'patches':   ['NSS-3.39_pkgconfig.patch'],
#        'start_dir': '%(namelower)s-%(version)s/nss',
#        'skipsteps': ['configure','install'],
#        'parallel':  1,
#        'buildopts': 'BUILD_OPT=1 USE_64=1 CPATH="%(installdir)s/include/nspr:$CPATH" && ' + \
#                     'cd config && make PREFIX=%(installdir)s BUILD_OPT=1 USE_64=1 && cd - && ' + \
#                     '/bin/cp -Lpr %(builddir)s/%(namelower)s-%(version)s/dist/Linux*.OBJ/* %(installdir)s && ' + \
#                     '/bin/cp -Lpr %(builddir)s/%(namelower)s-%(version)s/dist/public/*     %(installdir)s/include',
#    }),
#
# Regular math libs
#
    ('GSL', local_GSL_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': [GNU_SOURCE]
                       }],
        'start_dir':   '%(namelower)s-%(version)s'
    }),
    ('libcerf', local_libcerf_version, {
        'easyblock':   'CMakeMake',
        'separate_build_dir': False,
        # https://jugit.fz-juelich.de/mlz/libcerf/-/archive/v1.13/libcerf-v1.13.tar.bz2
        # The problem with this link is that whatever .tar.gz file you request to it, it will
        # produce a file with that name and a version of libcerf into it, so we try to isolate
        # it.
        'sources':     [ {
                          'filename':    '%(namelower)s-v%(version)s.tar.bz2',
                          'source_urls': ['https://jugit.fz-juelich.de/mlz/libcerf/-/archive/v' + local_libcerf_version]
                       }],
        #'sources':     [ '%(namelower)s-v%(version)s.tar.bz2' ],
        #'source_urls': [ 'https://jugit.fz-juelich.de/mlz/libcerf/-/archive/v' + local_libcerf_version ],
        'separate_build_dir': True,
        'start_dir':   '%(namelower)s-v%(version)s',
        'configopts':  '-DLIB_MAN=OFF',
    }),
#
# Arbitrary precision math
#
    ('GMP', local_GMP_version, {
        'easyblock':   'ConfigureMake',
        'sources':       [ {
                            'filename':    SOURCELOWER_TAR_XZ,
                            'source_urls': [GNU_SOURCE]
                         } ],
        'start_dir':     '%(namelower)s-%(version)s',
        'toolchainopts': {'pic': True, 'precise': True},
        'configopts':    '--enable-cxx'
    }),
    ('MPFR', local_MPFR_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_XZ,
                          'source_urls': [GNU_SOURCE]
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--with-gmp=%(installdir)s'
    }),
    ('MPC', local_MPC_version, {
        'easyblock':  'ConfigureMake',
        'sources':    [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': [GNU_SOURCE]
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--with-gmp=%(installdir)s --with-mpfr=%(installdir)s'
    }),
    ('mpdecimal', local_mpdecimal_version, {
        'easyblock':  'ConfigureMake',
        'sources':    [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': ['https://www.bytereef.org/software/mpdecimal/releases/']
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
    }),
#
# Miscellaneous
#
    ('double-conversion', local_double_conv_version, {
        'easyblock':   'CMakeMake',
        'separate_build_dir': False,
        'sources':     [ {
                          'download_filename': 'v%(version)s.tar.gz',
                          'filename':          SOURCELOWER_TAR_GZ,
                          'source_urls':       ['https://github.com/google/%(name)s/archive'],
                          'extract_cmd':       "mkdir %(namelower)s-%(version)s-static ; tar -x --strip-components=1 -C %(namelower)s-%(version)s-static -f %s"
                       } ],
        'start_dir':   '%(namelower)s-%(version)s-static',
        'build_type':  'Release',
        'configopts':  '',
    }),
    ('double-conversion', local_double_conv_version, {
        'easyblock':   'CMakeMake',
        'separate_build_dir': False,
        'sources':     [ {
                          'download_filename': 'v%(version)s.tar.gz',
                          'filename':          SOURCELOWER_TAR_GZ,
                          'source_urls':       ['https://github.com/google/%(name)s/archive'],
                          'extract_cmd':       "mkdir %(namelower)s-%(version)s-static-pic ; tar -x --strip-components=1 -C %(namelower)s-%(version)s-static-pic -f %s"
                       } ],
        'start_dir':   '%(namelower)s-%(version)s-static-pic',
        'build_type':  'Release',
        'configopts':  '-DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_STATIC_LIBRARY_SUFFIX_CXX=_pic.a',
    }),
    ('double-conversion', local_double_conv_version, {
        'easyblock':   'CMakeMake',
        'separate_build_dir': False,
        'sources':     [ {
                          'download_filename': 'v%(version)s.tar.gz',
                          'filename':          SOURCELOWER_TAR_GZ,
                          'source_urls':       ['https://github.com/google/%(name)s/archive'],
                          'extract_cmd':       "mkdir %(namelower)s-%(version)s-shared ; tar -x --strip-components=1 -C %(namelower)s-%(version)s-shared -f %s"
                       } ],
        'start_dir':   '%(namelower)s-%(version)s-shared',
        'build_type':  'Release',
        'configopts':  '-DBUILD_SHARED_LIBS=ON'
    }),
    ('file', local_file_version, {
        'sources':     [ {
                          'filename':    SOURCE_TAR_GZ,
                          'source_urls': ['https://www.astron.com/pub/file/']
                       } ],
        'start_dir':   '%(namelower)s-%(version)s'
    }),
    ('gc', local_gc_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCE_TAR_GZ,
                          'source_urls': ['http://hboehm.info/gc/gc_source/']
                       }, {
                          'filename':    'libatomic_ops-7_4_4.tar.gz',
                          'source_urls': ['https://github.com/ivmai/libatomic_ops/archive/'],
                          'extract_cmd': 'mkdir -p %(name)s-%(version)s/libatomic_ops ; tar -xf %s -C %(name)s-%(version)s/libatomic_ops --strip-components=1'
                       } ],
        'start_dir':     '%(name)s-%(version)s',
        'preconfigopts': "ln -s %(builddir)s/libatomic_ops*/ libatomic_ops && ",
        'configopts':    '--enable-threads=posix',
    }),
    ('GDBM', local_GDBM_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': [GNU_SOURCE]
                       }],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--enable-libgdbm-compat --with-libiconv-prefix=%(installdir)s',
    }),
    ('libevent', local_libevent_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    '%(name)s-%(version)s-stable.tar.gz',
                          'source_urls': ['https://github.com/%(name)s/%(name)s/releases/download/release-%(version)s-stable/']
                       }],
        'start_dir':   '%(namelower)s-%(version)s-stable'
    }),
    ('libffi', local_libffi_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': ['https://github.com/libffi/libffi/releases/download/v%(version)s/']
                       } ],
        'start_dir':   '%(namelower)s-%(version)s'
    }),
    ('libyaml', local_libyaml_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    'yaml-%(version)s.tar.gz',
                          'source_urls': ['http://pyyaml.org/download/libyaml/']
                       } ],
#        Depending on how the download is done or what download site is used, the configure script may not be included.
#        In that case, the bootstrap script can be used to generate it.
#        'preconfigopts': './bootstrap && ',
        'start_dir':     'yaml-%(version)s'
    }),
    ('LMDB', local_LMDB_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    '%(name)s_%(version)s.tar.gz',
                          'source_urls': ['https://github.com/LMDB/lmdb/archive/']
                       } ],
        'start_dir':   '%(namelower)s-%(name)s_%(version)s/libraries/liblmdb',
        'skipsteps':   ['configure'],
        'buildopts':   'CC="$CC" OPT="$CFLAGS"',
        'runtest':     'test',
        'installopts': 'prefix="%(installdir)s"',
    }),
    ('PCRE', local_PCRE_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_BZ2,
                          'source_urls': [SOURCEFORGE_SOURCE]
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  "--with-pic --disable-cpp --enable-utf --enable-unicode-properties --enable-newline-is-any " + \
                       "--enable-pcre16 --enable-pcre32 --enable-jit " + \
                       "--enable-pcregrep-libz --enable-pcregrep-libbz2 --enable-pcretest-libreadline ",
    }),
    ('PCRE2', local_PCRE2_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_BZ2,
                          'source_urls': ['https://download.sourceforge.net/pcre']
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  "--with-pic --disable-cpp --enable-newline-is-any " + \
                       "--enable-pcre2-16 --enable-pcre2-32 --enable-jit " + \
                       "--enable-pcre2grep-libz --enable-pcre2grep-libbz2 --enable-pcre2test-libreadline "
    }),
    ('UDUNITS', local_UDUNITS_version, { # depends on expat!
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': ['ftp://ftp.unidata.ucar.edu/pub/udunits']
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
    }),
    ('util-linux', local_util_version, { # Needs ncurses and zlib
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_XZ,
                          'source_urls': ['http://www.kernel.org/pub/linux/utils/util-linux/v' + local_util_major_minor]
                       } ],
        'configopts':  "--disable-chfn-chsh --disable-login --disable-su --disable-rfkill " +
                       "--disable-wall --disable-use-tty-group " +
                       "--disable-makeinstall-chown --disable-makeinstall-setuid " +
                       "--with-systemdsystemunitdir='${prefix}/systemd' " +
                       "--with-bashcompletiondir='${prefix}/share/bash-completion/completions' " +
                       "--without-python ",
        'start_dir':   '%(namelower)s-%(version)s'
    }),
    ('wget', local_wget_version, { # depends on PCRE, libidn and zlib.
        'easyblock':   'ConfigureMake',
        'sources':       [ {
                            'filename':    SOURCELOWER_TAR_GZ,
                            'source_urls': [GNU_SOURCE]
                         } ],
        'start_dir':     '%(namelower)s-%(version)s',
        'preconfigopts': "export PKG_CONFIG_PATH=%(installdir)s/lib/pkgconfig:%(installdir)s/lib64/pkgconfig:/usr/lib64/pkgconfig:/usr/lib/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig && ",
        'configopts':    '--with-ssl=openssl ',
    }),
#
# Graphics
#
    ('pixman', local_pixman_version, {
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCE_TAR_GZ,
                          'source_urls': ['http://cairographics.org/releases']
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--enable-gnuplot ',
    }),
    ('freetype', local_freetype_version, { # Needs zlib, bzip2 and libpng
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCE_TAR_XZ,
                          'source_urls': [GNU_SAVANNAH_SOURCE]
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--enable-freetype-config --with-harfbuzz=no',
    }),
    ('fontconfig', local_fontconfig_version, { # Needs pkg-config and gperf (buildtools) and expat, freetype and util-linux.
        'easyblock':   'ConfigureMake',
        'sources':     [ {
                          'filename':    SOURCE_TAR_XZ,
                          'source_urls': ['http://www.freedesktop.org/software/fontconfig/release/']
                       } ],
        'start_dir':     '%(namelower)s-%(version)s',
        'preconfigopts': 'PKG_CONFIG_PATH=%(installdir)s/lib/pkgconfig:%(installdir)s/lib64/pkgconfig:$PKG_CONFIG_PATH ',
        'configopts':    '--disable-docs',
    }),
]

sanity_check_paths = {
    'files': [],
    'dirs':  ['include']
}

modextravars = {
    'CURL_INCLUDES':                '%(installdir)s/include',
# Bad idea to add the variables below as they confuse get_software_libdir
# in some EasyBlocks. It will be very tricy to only add those that
# we need for certain packages and avoid others...
#    # For increased compatibility with standard EasyBuild recipes
#    'EBROOTNCURSES':                '%(installdir)s',
#    'EBVERSIONNCURSES':             local_ncurses_version,
#    'EBROOTLIBREADLINE':            '%(installdir)s',
#    'EBVERSIONLIBREADLINE':         local_libreadline_version,
#    'EBROOTBROTLI':                 '%(installdir)s',
#    'EBVERSIONBROTLI':              local_brotli_version,
#    'EBROOTBZIP2':                  '%(installdir)s',
#    'EBVERSIONBZIP2':               local_bzip2_version,
#    'EBROOTSZIP':                   '%(installdir)s',
#    'EBVERSIONSZIP':                local_Szip_version,
#    'EBROOTXZ':                     '%(installdir)s',
#    'EBVERSIONXZ':                  local_XZ_version,
#    'EBROOTZLIB':                   '%(installdir)s',
#    'EBVERSIONZLIB':                local_zlib_version,
#    'EBROOTGZIP':                   '%(installdir)s',
#    'EBVERSIONGZIP':                local_gzip_version,
#    'EBROOTLZ4':                    '%(installdir)s',
#    'EBVERSIONLZ4':                 local_lz4_version,
#    'EBROOTLZIP':                   '%(installdir)s',
#    'EBVERSIONLZIP':                local_lzip_version,
#    'EBROOTZSTD':                   '%(installdir)s',
#    'EBVERSIONZSTD':                local_zstd_version,
#    'EBROOTLIBB2':                  '%(installdir)s',
#    'EBVERSIONLIBB2':               local_libb2_version,
#    'EBROOTLZO':                    '%(installdir)s',
#    'EBVERSIONLZO':                 local_LZO_version,
#    'EBROOTBLOSC':                  '%(installdir)s',
#    'EBVERSIONBLOSC':               local_blosc_version,
#    'EBROOTSNAPPY':                 '%(installdir)s',
#    'EBVERSIONSNAPPY':              local_snappy_version,
#    'EBROOTLIBARCHIVE':             '%(installdir)s',
#    'EBVERSIONLIBARCHIVE':          local_libarchive_version,
#    'EBROOTLIBDEFLATE':             '%(installdir)s',
#    'EBVERSIONLIBDEFLATE':          local_libdeflate_version,
#    'EBROOTGIFLIB':                 '%(installdir)s',
#    'EBVERSIONGIFLIB':              local_giflib_version,
#    'EBROOTJASPER':                 '%(installdir)s',
#    'EBVERSIONJASPER':              local_JasPer_version,
#    'EBROOTLIBJPEGMINTURBO':        '%(installdir)s',
#    'EBVERSIONLIBJPEGMINTURBO':     local_libjpegturbo_version,
#    'EBROOTLIBPNG':                 '%(installdir)s',
#    'EBVERSIONLIBPNG':              local_libpng_version,
#    'EBROOTLIBTIFF':                '%(installdir)s',
#    'EBVERSIONLIBTIFF':             local_libtiff_version,
#    'EBROOTLIBWEBP':                '%(installdir)s',
#    'EBVERSIONLIBWEBP':             local_libwebp_version,
#    'EBROOTX264':                   '%(installdir)s',
#    'EBVERSIONX264':                local_x264_version,
#    'EBROOTX265':                   '%(installdir)s',
#    'EBVERSIONX265':                local_x265_version,
#    'EBROOTLAME':                   '%(installdir)s',
#    'EBVERSIONLAME':                local_LAME_version,
#    'EBROOTLIBOPUS':                '%(installdir)s',
#    'EBVERSIONLIBOPUS':             local_libopus_version,
#    'EBROOTCURL':                   '%(installdir)s',
#    'EBVERSIONCURL':                local_cURL_version,
#    'EBROOTEXPAT':                  '%(installdir)s',
#    'EBVERSIONEXPAT':               local_expat_version,
#    'EBROOTLIBXML2':                '%(installdir)s',
#    'EBVERSIONLIBXML2':             local_libxml2_version,
#    'EBROOTLIBXSLT':                '%(installdir)s',
#    'EBVERSIONLIBXSLT':             local_libxslt_version,
#    'EBROOTGSL':                    '%(installdir)s',
#    'EBVERSIONGSL':                 local_GSL_version,
#    'EBROOTLIBCERF':                '%(installdir)s',
#    'EBVERSIONLIBCERF':             local_libcerf_version,
    'EBROOTGMP':                    '%(installdir)s',
    'EBVERSIONGMP':                 local_GMP_version,
    'EBROOTMPFR':                   '%(installdir)s',
    'EBVERSIONMPFR':                local_MPFR_version,
#    'EBROOTMPC':                    '%(installdir)s',
#    'EBVERSIONMPC':                 local_MPC_version,
#    'EBROOTMPDECIMAL':              '%(installdir)s',
#    'EBVERSIONMPDECIMAL':           local_mpdecimal_version,
#    'EBROOTFRIBIDI':                '%(installdir)s',
#    'EBVERSIONFRIBIDI':             local_fribidi_version,
#    'EBROOTGETTEXT':                '%(installdir)s',
#    'EBVERSIONGETTEXT':             local_gettext_version,
#    'EBROOTICU':                    '%(installdir)s',
#    'EBVERSIONICU':                 local_ICU_version,
#    'EBROOTLIBICONV':               '%(installdir)s',
#    'EBVERSIONLIBICONV':            local_libiconv_version,
#    'EBROOTLIBUNISTRING':           '%(installdir)s',
#    'EBVERSIONLIBUNISTRING':        local_libunistring_version,
#    'EBROOTLIBIDN':                 '%(installdir)s',
#    'EBVERSIONLIBIDN':              local_libidn_version,
#    'EBROOTLIBIDN2':                '%(installdir)s',
#    'EBVERSIONLIBIDN2':             local_libidn2_version,
#    'EBROOTDOUBLEMINCONVERSION':    '%(installdir)s',
#    'EBVERSIONDOUBLEMINCONVERSiON': local_double_conv_version,
#    'EBROOTFILE':                   '%(installdir)s',
#    'EBVERSIONFILE':                local_file_version,
#    'EBROOTGC':                     '%(installdir)s',
#    'EBVERSIONGC':                  local_gc_version,
#    'EBROOTGDBM':                   '%(installdir)s',
#    'EBVERSIONGDBM':                local_GDBM_version,
#    'EBROOTLIBFFI':                 '%(installdir)s',
#    'EBVERSIONLIBFFI':              local_libffi_version,
#    'EBROOTLIBYAML':                '%(installdir)s',
#    'EBVERSIONLIBYAML':             local_libyaml_version,
#    'EBROOTLMDB':                   '%(installdir)s',
#    'EBVERSIONLMDB':                local_LMDB_version,
#    'EBROOTPCRE':                   '%(installdir)s',
#    'EBVERSIONPCRE':                local_PCRE_version,
#    'EBROOTPCRE2':                  '%(installdir)s',
#    'EBVERSIONPCRE2':               local_PCRE2_version,
#    'EBROOTUDUNITS':                '%(installdir)s',
#    'EBVERSIONUDUNITS':             local_UDUNITS_version,
#    'EBROOTUTIL':                   '%(installdir)s',
#    'EBVERSIONUTIL':                local_util_version,
#    'EBROOTWGET':                   '%(installdir)s',
#    'EBVERSIONWGET':                local_wget_version,
#    'EBROOTOIXMAN':                 '%(installdir)s',
#    'EBVERSIONPIXMAN':              local_pixman_version,
#    'EBROOTFREETYPE':               '%(installdir)s',
#    'EBVERSIONFREETYPE':            local_freetype_version,
#    'EBROOTFONTCONFIG':             '%(installdir)s',
#    'EBVERSIONFONTCONFIG':          local_fontconfig_version,
#    'EBROOTLIBEVENT':               '%(installdir)s',
#    'EBVERSIONLIBEVENT':            local_libevent_version,
}

modextrapaths = {
    'CPATH':     ['include/freetype2'],
#    'CPATH':     ['include/nss','include/freetype2'],
    'INFOPATH' : 'share/info',
}

moduleclass = 'lib'

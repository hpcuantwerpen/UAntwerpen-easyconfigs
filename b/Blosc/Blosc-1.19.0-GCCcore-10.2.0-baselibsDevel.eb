easyblock = 'CMakeMake'

name =          'Blosc'
version =       '1.19.0'
versionsuffix = '-baselibsDevel'

local_buildset =         '2020b'
local_gcc_version =      '10.2.0'
local_binutils_version = '2.35'

homepage = 'https://www.blosc.org/'

whatis = [
    "Description: Blosc is an extremely fast, multi-threaded, meta-compressor library"
]

description = """
Blosc is a high performance compressor optimized for binary data. It has been 
designed to transmit data to the processor cache faster than the traditional, 
non-compressed, direct memory fetch approach via a memcpy() OS call. Blosc is 
the first compressor (that I'm aware of) that is meant not only to reduce the 
size of large datasets on-disk or in-memory, but also to accelerate 
memory-bound computations (which is typical in vector-vector operations).

It uses the blocking technique (as described in this article) to reduce activity 
on the memory bus as much as possible. In short, the blocking technique works 
by dividing datasets in blocks that are small enough to fit in L1 cache of 
modern processor and perform compression/decompression there. It also 
leverages SIMD (SSE2) and multi-threading capabilities present in nowadays 
multi-core processors so as to accelerate the compression/decompression 
process to a maximum.
"""

toolchain =     {'name': 'GCCcore', 'version': local_gcc_version}
toolchainopts = {'pic': True, 'cstd': 'c++11'}

#source_urls = ['https://github.com/Blosc/c-blosc/archive/']
#sources =     ['v%(version)s.tar.gz']
sources = [ { 'filename':          SOURCELOWER_TAR_GZ,
              'download_filename': 'v%(version)s.tar.gz',
              'source_urls':       ['https://github.com/Blosc/c-blosc/archive/'] } ]
patches = [
    ('Blosc-%(version)s_blosc_internal_xgetbv.patch')
]
checksums =   ['cf3d6193fece9becddb62248b9981bf78cf1c7faf58150fd520d4755cd622488']

builddependencies = [
    ('binutils',   local_binutils_version),
    ('buildtools', local_buildset,         '', True), # For CMake
]

sanity_check_paths = {
    'files': ['include/blosc-export.h', 'include/blosc.h', 'lib/libblosc.a',
              'lib/libblosc.%s' % SHLIB_EXT],
    'dirs':  [],
}

moduleclass = 'lib'
